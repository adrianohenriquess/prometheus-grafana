Primeiro pegar as requisições que deram certo para aplicação
meno actuator
http_server_requests_seconds_count{application="app-forum-api", method=~"GET|POST", status!~"2..|3..", uri!="/actuator/prometheus"}[1m]

vai retornar um array de timestamp e na linha de comando:
array=(@1698523727.21 @1698523732.21 @1698523737.21 @1698523742.21 @1698523747.21 @1698523752.21  @1698523757.21 @1698523762.21)
coverter o array com esse comando
for i in "${array[@]}" ; do date -d $i ; done

#saber a quantidade de requisições da aplicação por segundo
nos ultimos 15 minutos
irate(http_server_requests_seconds_count{application="app-forum-api",
uri!="/actuator/prometheus"}[5m])

#agregar requisições por segundo
sum(irate(http_server_requests_seconds_count
{application="app-forum-api", uri!="/actuator/prometheus"}[5m]))


#saber onde se encaixa em tempos de execução, 99% da requisições de
#uma uri
histogram_quantile(0.99,
sum(rate(http_server_requests_seconds_bucket
{application="app-forum-api", instance="app-forum-api:8080",
job="app-forum-api", uri!="/actuator/prometheus"}[1m])) by (le))


#Comunicação com slack
curl -X POST --data-urlencode "payload={\"channel\": \"#forum-api\", \"username\": \"webhookbot\", \"text\": \"Isso é postado em #forum-api originário de um bot chamado webhookbot.\", \"icon_emoji\": \":ghost:\"}" https://hooks.slack.com/services/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


https://hooks.slack.com/services/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
